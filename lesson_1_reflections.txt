- On running both versions of files we can see where are the differences and out of these where it could have been broken.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
-I can work without have to worry about saving files so that in future if anything brakes, i can come back anytime.
Manual saving
--pros
-You know best when its time to commit a logical change which makes sense and won't break anything else
--cons
- If you forgot it might be an issue
Automatic saving
--pros
-Don't have to worry about saving everytime manually
--cons
-Will have huge clutter of data most of which don't make sense.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
-In vcs like git its important to track every file because most of the files are interrelated to each other, but vcs like google docs don't have to worry about that since each document is complete in its own way and changes made in that is not going to affect other documents.

How can you use the commands git log and git diff to view the history of files?
- Yes we  can, we can first use log to see all the commits done and with diff we can check the difference between two versions to see how we progressed since the intial code.

How might using version control make you more confident to make changes that could break something?
- because i know i can come back anytime and go back to previous version which didn't had any bug. :)

Now that you have your workspace set up, what do you want to try using Git for?
- Try to create some a new project and see how git can help in the process of creating projects and working with them.